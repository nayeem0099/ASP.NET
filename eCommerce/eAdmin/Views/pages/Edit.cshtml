@model eAdmin.Models.page

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_LayoutAdmin.cshtml";
}

<div class="page-header">
    <div class="container-fluid">
        <div class="pull-right">
            <a data-original-title="Back to List"
               href="@Url.Action("Index")"
               data-toggle="tooltip" title="" class="btn btn-primary">
                <i class="fa fa-reply"></i>
            </a>

        </div>
        <h1>Users</h1>
        <ul class="breadcrumb">
            <li>@Html.ActionLink("Dashboard", "dashboard")</li>
            <li>@Html.ActionLink("Users", "Index")</li>
        </ul>
    </div>
</div>
<div class="container-fluid">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">
                <i class="fa fa-list"></i>Edit
            </h3>
        </div>
        <div class="panel-body">
            <div class="table-responsive" style="overflow-x: visible;">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.C_sort, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.C_sort, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.C_sort, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.topic, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.topic, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.topic, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.parent_id, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.parent_id, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.parent_id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.background_color, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.background_color, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.background_color, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.body_sort, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.body_sort, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.body_sort, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
